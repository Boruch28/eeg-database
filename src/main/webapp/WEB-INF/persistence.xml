<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <!-- It is not sure whether this file will be used or not. -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/project.properties</value>
                <value>/WEB-INF/facebook.properties</value>
            </list>
        </property>
    </bean>


    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <!-- System.getProperties() -->
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <!-- The new Properties -->
            <util:properties>
                <prop key="javax.xml.parsers.DocumentBuilderFactory">${javax.xml.parsers.DocumentBuilderFactory}</prop>
                <prop key="javax.xml.transform.TransformerFactory">${javax.xml.transform.TransformerFactory}</prop>
            </util:properties>
        </property>
    </bean>


    <bean id="fbStuffKeeper" class="cz.zcu.kiv.eegdatabase.logic.controller.social.FBStuffManager">
        <property name="secret" value="${facebook.appSecret}"/>
        <property name="clientId" value="${facebook.appId}"/>
        <property name="redirectURI" value="${redirect.uri}"/>
    </bean>

    <bean id="indexingBean" class="cz.zcu.kiv.eegdatabase.data.indexing.IndexingData" init-method="init">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" value="classpath*:cz/zcu/kiv/eegdatabase/data/pojo/DataFile.hbm.xml" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="autocommmit">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!-- Hibernate Search configuration
 <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
 <prop key="hibernate.search.default.indexBase">./users/application/indexes</prop>              -->
                <prop key="hibernate.search.default.directory_provider">
                    org.hibernate.search.store.RAMDirectoryProvider
                </prop>

                <prop key="hibernate.cfgfile">/hibernate.cfg.xml</prop>
            </props>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="post-update" value-ref="searchListener"/>
                <entry key="post-insert" value-ref="searchListener"/>
                <entry key="post-delete" value-ref="searchListener"/>
                <entry key="post-collection-recreate" value-ref="searchListener"/>
                <entry key="post-collection-remove" value-ref="searchListener"/>
                <entry key="post-collection-update" value-ref="searchListener"/>
                <entry key="flush" value-ref="flushListener"/>
                <!--
                  Nasledujici radek zakomentovan, protoze zpusobuje, ze se neukladaji
                  data pri vytvareni novych polozek nebo pri uprave polozek jiz vlozenych.
                  Pritom jsem si nevsiml zadnych viditelnych chyb nebo chybovych hlaseni.
                  Zakomentoval Jindrich Pergler
                <entry key="flush" value-ref="searchListener" />
                -->
            </map>
        </property>


    </bean>

    <bean name="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/classes/messages</value>
                <value>/WEB-INF/classes/errors</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="fallbackToSystemLocale" value="false"/>
        <property name="cacheSeconds" value="90"/>
    </bean>

    <bean id="searchListener" class="org.hibernate.search.event.FullTextIndexEventListener"/>
    <bean id="flushListener" class="org.hibernate.event.def.DefaultFlushEventListener"/>

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="captchaEngine"
          class="com.octo.captcha.engine.image.gimpy.SimpleListImageCaptchaEngine"/>
    <bean id="captchaService"
          class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
        <constructor-arg index="0">
            <ref bean="imageEngine"/>
        </constructor-arg>
        <constructor-arg index="1">
            <value>180</value>
        </constructor-arg>
        <constructor-arg index="2">
            <value>180000</value>
        </constructor-arg>
        <constructor-arg type="int" index="3" value="75000"/>
    </bean>


    <bean id="imageEngine"
          class="com.octo.captcha.engine.GenericCaptchaEngine">
        <constructor-arg index="0">
            <list>
                <ref bean="CaptchaFactory"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="CaptchaFactory"
          class="com.octo.captcha.image.gimpy.GimpyFactory">
        <constructor-arg>
            <ref bean="wordgen"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="wordtoimage"/>
        </constructor-arg>
    </bean>

    <bean id="wordgen"
          class="com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator">
        <constructor-arg>
            <ref bean="filedict"/>
        </constructor-arg>
    </bean>

    <bean id="filedict"
          class="com.octo.captcha.component.word.FileDictionary">
        <constructor-arg index="0">
            <value>toddlist</value>
        </constructor-arg>
    </bean>

    <bean id="wordtoimage"
          class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage">
        <constructor-arg index="0">
            <ref bean="fontGenRandom"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="backGenUni"/>
        </constructor-arg>
        <constructor-arg index="2">
            <ref bean="simpleWhitePaster"/>
        </constructor-arg>
    </bean>

    <bean id="fontGenRandom"
          class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
        <constructor-arg index="0">
            <value>40</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>50</value>
        </constructor-arg>
        <constructor-arg index="2">
            <list>
                <ref bean="fontArial"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="fontArial" class="java.awt.Font">
        <constructor-arg index="0">
            <value>Arial</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>0</value>
        </constructor-arg>
        <constructor-arg index="2">
            <value>10</value>
        </constructor-arg>
    </bean>

    <bean id="backGenUni"
          class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator">
        <constructor-arg index="0">
            <value>300</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>100</value>
        </constructor-arg>
    </bean>

    <bean id="simpleWhitePaster"
          class="com.octo.captcha.component.image.textpaster.SimpleTextPaster">
        <constructor-arg type="java.lang.Integer" index="0">
            <value>3</value>
        </constructor-arg>
        <constructor-arg type="java.lang.Integer" index="1">
            <value>5</value>
        </constructor-arg>
        <constructor-arg type="java.awt.Color" index="2">
            <ref bean="colorGreen"/>
        </constructor-arg>
    </bean>

    <bean id="colorGreen" class="java.awt.Color">
        <constructor-arg type="int" index="0">
            <value>117</value>
        </constructor-arg>
        <constructor-arg type="int" index="1">
            <value>196</value>
        </constructor-arg>
        <constructor-arg type="int" index="2">
            <value>210</value>
        </constructor-arg>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>


    <aop:config>
        <!-- vse ve vrstve service obalit transakcemi -->
        <aop:pointcut id="serviceMethods" expression="execution(* cz.zcu.kiv.eegdatabase.data.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

</beans>
