/*******************************************************************************
 * This file is part of the EEG-database project
 * 
 *   ==========================================
 *  
 *   Copyright (C) 2013 by University of West Bohemia (http://www.zcu.cz/en/)
 *  
 *  ***********************************************************************************************************************
 *  
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *   the License. You may obtain a copy of the License at
 *  
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  
 *   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 *  
 *  ***********************************************************************************************************************
 *  
 *   ObjectFactory.java, 2013/10/02 00:01 Jakub Rinkes
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.05 at 07:28:30 odp. CET 
//


package cz.zcu.kiv.eegdatabase.data.xmlObjects;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the xmlObjects package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Measuration_QNAME = new QName("", "measuration");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: xmlObjects
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ScenarioType }
     * 
     */
    public ScenarioType createScenarioType() {
        return new ScenarioType();
    }

    /**
     * Create an instance of {@link FileMetadataType }
     * 
     */
    public FileMetadataType createFileMetadataType() {
        return new FileMetadataType();
    }

    /**
     * Create an instance of {@link WeatherType }
     * 
     */
    public WeatherType createWeatherType() {
        return new WeatherType();
    }

    /**
     * Create an instance of {@link PersonAddParam }
     * 
     */
    public PersonAddParam createPersonAddParam() {
        return new PersonAddParam();
    }

    /**
     * Create an instance of {@link MeasurationType }
     * 
     */
    public MeasurationType createMeasurationType() {
        return new MeasurationType();
    }

    /**
     * Create an instance of {@link HearingDefectType }
     * 
     */
    public HearingDefectType createHearingDefectType() {
        return new HearingDefectType();
    }

    /**
     * Create an instance of {@link PersonType }
     * 
     */
    public PersonType createPersonType() {
        return new PersonType();
    }

    /**
     * Create an instance of {@link EyesDefectType }
     * 
     */
    public EyesDefectType createEyesDefectType() {
        return new EyesDefectType();
    }

    /**
     * Create an instance of {@link HardwareType }
     * 
     */
    public HardwareType createHardwareType() {
        return new HardwareType();
    }

    /**
     * Create an instance of {@link DataType }
     * 
     */
    public DataType createDataType() {
        return new DataType();
    }

    /**
     * Create an instance of {@link MeasurationAddParam }
     * 
     */
    public MeasurationAddParam createMeasurationAddParam() {
        return new MeasurationAddParam();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeasurationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "measuration")
    public JAXBElement<MeasurationType> createMeasuration(MeasurationType value) {
        return new JAXBElement<MeasurationType>(_Measuration_QNAME, MeasurationType.class, null, value);
    }

}
