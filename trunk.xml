<?xml version="1.0" encoding="UTF-8"?>
<project name="trunk" default="all">
 
 <!-- import json build file-->
 <import file="json-converter.xml"/>
 
 <property file="trunk.properties"/>
 <!-- Uncomment the following property if no tests compilation is needed -->
 <!-- 
 <property name="skip.tests" value="true"/>
  -->
 <property name="javac2.home" value="${idea.home}/lib"/>
 <path id="javac2.classpath">
   <pathelement location="${javac2.home}/javac2.jar"/>
   <pathelement location="${javac2.home}/jdom.jar"/>
   <pathelement location="${javac2.home}/asm.jar"/>
   <pathelement location="${javac2.home}/asm-commons.jar"/>
   <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
 </path>
 <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
 <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
 
 <!-- Compiler options -->
 
 <property name="compiler.debug" value="on"/>
 <property name="compiler.generate.no.warnings" value="off"/>
 <property name="compiler.args" value=""/>
 <property name="compiler.max.memory" value="128m"/>
 <patternset id="ignored.files">
   <exclude name="**/CVS/**"/>
   <exclude name="**/SCCS/**"/>
   <exclude name="**/RCS/**"/>
   <exclude name="**/rcs/**"/>
   <exclude name="**/.DS_Store/**"/>
   <exclude name="**/.svn/**"/>
   <exclude name="**/.pyc/**"/>
   <exclude name="**/.pyo/**"/>
   <exclude name="**/*.pyc/**"/>
   <exclude name="**/*.pyo/**"/>
   <exclude name="**/.git/**"/>
   <exclude name="**/*.hprof/**"/>
   <exclude name="**/_svn/**"/>
   <exclude name="**/.hg/**"/>
 </patternset>
 <patternset id="library.patterns">
   <include name="*.zip"/>
   <include name="*.war"/>
   <include name="*.egg"/>
   <include name="*.ear"/>
   <include name="*.swc"/>
   <include name="*.jar"/>
 </patternset>
 <patternset id="compiler.resources">
   <include name="**/?*.properties"/>
   <include name="**/?*.xml"/>
   <include name="**/?*.gif"/>
   <include name="**/?*.png"/>
   <include name="**/?*.jpeg"/>
   <include name="**/?*.jpg"/>
   <include name="**/?*.html"/>
   <include name="**/?*.dtd"/>
   <include name="**/?*.tld"/>
   <include name="**/?*.ftl"/>
 </patternset>
 
 <!-- JDK definitions -->
 
 <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
 <path id="jdk.classpath.1.6">
   <fileset dir="${jdk.home.1.6}">
     <include name="jre/lib/alt-rt.jar"/>
     <include name="jre/lib/charsets.jar"/>
     <include name="jre/lib/deploy.jar"/>
     <include name="jre/lib/javaws.jar"/>
     <include name="jre/lib/jce.jar"/>
     <include name="jre/lib/jsse.jar"/>
     <include name="jre/lib/management-agent.jar"/>
     <include name="jre/lib/plugin.jar"/>
     <include name="jre/lib/resources.jar"/>
     <include name="jre/lib/rt.jar"/>
     <include name="jre/lib/ext/dnsns.jar"/>
     <include name="jre/lib/ext/localedata.jar"/>
     <include name="jre/lib/ext/sunjce_provider.jar"/>
     <include name="jre/lib/ext/sunmscapi.jar"/>
     <include name="jre/lib/ext/sunpkcs11.jar"/>
   </fileset>
 </path>
 
 <property name="project.jdk.home" value="${jdk.home.1.6}"/>
 <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
 <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>
 
 
 <!-- Project Libraries -->

 <path id="library.classpath">
 		<fileset dir="${basedir}" id="libs" >
			<include name="lib/**/*.jar" />
		</fileset>
 </path>
 
 
 <!-- Application Server Libraries -->

 <path id="library.tomcat_6.classpath">
 		<fileset dir="${server.home}">
			<include name="lib/**/*.jar" />
		</fileset>
 </path>
 
 <!-- Modules -->
 
 
 <!-- Module EEGDatabase -->
 
 <dirname property="module.eegdatabase.basedir" file="${ant.file}"/>
 
 
 <property name="module.jdk.home.eegdatabase" value="${project.jdk.home}"/>
 <property name="module.jdk.bin.eegdatabase" value="${project.jdk.bin}"/>
 <property name="module.jdk.classpath.eegdatabase" value="${project.jdk.classpath}"/>
 
 <property name="compiler.args.eegdatabase" value="${compiler.args}"/>
 
 <property name="eegdatabase.output.dir" value="${module.eegdatabase.basedir}/out/production/EEGDatabase"/>
 <property name="eegdatabase.testoutput.dir" value="${module.eegdatabase.basedir}/out/test/EEGDatabase"/>
 
 <path id="eegdatabase.module.bootclasspath">
   <!-- Paths to be included in compilation bootclasspath -->
 </path>
 
 <path id="eegdatabase.module.production.classpath">
   <path refid="${module.jdk.classpath.eegdatabase}"/>
    <path refid="library.classpath"/>
   <path refid="library.tomcat_6.classpath"/>
 </path>
 
 <path id="eegdatabase.runtime.production.module.classpath">
   <pathelement location="${eegdatabase.output.dir}"/>
   <path refid="library.classpath"/>
   <path refid="library.tomcat_6.classpath"/>
 </path>
 
 <path id="eegdatabase.module.classpath">
   <path refid="${module.jdk.classpath.eegdatabase}"/>
   <pathelement location="${eegdatabase.output.dir}"/>
   <path refid="library.classpath"/>
   <path refid="library.tomcat_6.classpath"/>
 </path>
 
 <path id="eegdatabase.runtime.module.classpath">
   <pathelement location="${eegdatabase.output.dir}"/>
   <pathelement location="${eegdatabase.testoutput.dir}"/>
   <path refid="library.classpath"/>
   <path refid="library.tomcat_6.classpath"/>
 </path>
 
 
 <patternset id="excluded.from.module.eegdatabase">
   <patternset refid="ignored.files"/>
 </patternset>
 
 <patternset id="excluded.from.compilation.eegdatabase">
   <patternset refid="excluded.from.module.eegdatabase"/>
 </patternset>
 
 <path id="eegdatabase.module.sourcepath">
   <dirset dir="${module.eegdatabase.basedir}">
     <include name="src/java"/>
   </dirset>
 </path>
 
 
 <target name="compile.module.eegdatabase" depends="compile.module.eegdatabase.production,compile.module.eegdatabase.tests" description="Compile module EEGDatabase"/>
 
 <target name="compile.module.eegdatabase.production" description="Compile module EEGDatabase; production classes">
   <mkdir dir="${eegdatabase.output.dir}"/>
   <javac2 destdir="${eegdatabase.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.eegdatabase}/javac">
     <compilerarg line="${compiler.args.eegdatabase}"/>
     <bootclasspath refid="eegdatabase.module.bootclasspath"/>
     <classpath refid="eegdatabase.module.production.classpath"/>
     <src refid="eegdatabase.module.sourcepath"/>
     <patternset refid="excluded.from.compilation.eegdatabase"/>
   </javac2>
   
   <copy todir="${eegdatabase.output.dir}">
     <fileset dir="/">
       <patternset refid="compiler.resources"/>
       <type type="file"/>
     </fileset>
   </copy>
 </target>
 
 <target name="compile.module.eegdatabase.tests" depends="compile.module.eegdatabase.production" description="compile module EEGDatabase; test classes" unless="skip.tests"/>
 
 <target name="clean.module.eegdatabase" description="cleanup module">
   <delete dir="${eegdatabase.output.dir}"/>
   <delete dir="${eegdatabase.testoutput.dir}"/>
 </target>
 
 <target name="init" description="Build initialization">
   <!-- Perform any build initialization in this target -->
 </target>
 
 <target name="clean" depends="init.artifacts, clean.module.eegdatabase, clean.artifact.eegdatabase" description="cleanup all"/>
 
 <target name="build.modules" depends="init, clean, compile.module.eegdatabase" description="build all modules"/>
 
 <target name="init.artifacts">
   <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
   <property name="artifact.output.eegdatabase" value="${basedir}/out/artifacts/EEGDatabase"/>
   <property name="artifact.output.eegdatabase_war" value="${basedir}/out/artifacts"/>
   <mkdir dir="${artifacts.temp.dir}"/>
   <property name="temp.jar.path.EEGDatabase.war" value="${artifacts.temp.dir}/EEGDatabase.war"/>
 </target>
 
 <target name="clean.artifact.eegdatabase" description="clean EEGDatabase artifact output">
     <echo>${artifact.output.eegdatabase}</echo>
   <delete dir="${artifact.output.eegdatabase}"/>
   <delete dir="${artifact.output.eegdatabase_war}"/>
 </target>
 
 <target name="artifact.eegdatabase" depends="init.artifacts, compile.module.eegdatabase" description="Build &apos;EEGDatabase&apos; artifact">
   <mkdir dir="${artifact.output.eegdatabase}"/>
   <mkdir dir="${artifact.output.eegdatabase}/WEB-INF"/>
   <mkdir dir="${artifact.output.eegdatabase}/WEB-INF/classes"/>
   <copy todir="${artifact.output.eegdatabase}/WEB-INF/classes">
     <fileset dir="${eegdatabase.output.dir}"/>
   </copy>
   <mkdir dir="${artifact.output.eegdatabase}/WEB-INF/lib"/>

   <copy todir="${artifact.output.eegdatabase}/WEB-INF/lib" flatten="true">
       <fileset dir="${basedir}/lib">
           <include name="**/*.jar"></include>
       </fileset>
   </copy>


   <copy todir="${artifact.output.eegdatabase}">
     <fileset dir="/"/>
   </copy>
   <mkdir dir="${artifact.output.eegdatabase}/WEB-INF"/>
   <copy file="//WEB-INF/web.xml" tofile="${artifact.output.eegdatabase}/WEB-INF/web.xml"/>
 </target>
 
 <target name="artifact.eegdatabase_war" depends="init.artifacts, artifact.eegdatabase, convertToJSON" description="Build &apos;EEGDatabase_war&apos; artifact">
   <property name="artifact.temp.output.eegdatabase_war" value="${artifacts.temp.dir}/EEGDatabase_war"/>
   <mkdir dir="${artifact.temp.output.eegdatabase_war}"/>
   <jar  destfile="${temp.jar.path.EEGDatabase.war}">
       <zipfileset dir="${artifact.output.eegdatabase}"/>
   </jar>
   <copy file="${temp.jar.path.EEGDatabase.war}" tofile="${artifact.temp.output.eegdatabase_war}/EEGDatabase.war"/>
 </target>
 
 <target name="build.all.artifacts" depends="artifact.eegdatabase, artifact.eegdatabase_war" description="Build all artifacts">
   <mkdir dir="${artifact.output.eegdatabase_war}"/>
   <copy todir="${artifact.output.eegdatabase_war}">
     <fileset dir="${artifact.temp.output.eegdatabase_war}"/>
   </copy>
   
   <!-- Delete temporary files -->
   <delete dir="${artifacts.temp.dir}"/>
 </target>
 
 <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>